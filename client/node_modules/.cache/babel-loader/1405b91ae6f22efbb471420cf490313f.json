{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tt\\\\Desktop\\\\FeedItForward\\\\feeditforwardapp\\\\client\\\\src\\\\Scan.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport Scanner from './Scanner';\nimport Result from './Result';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Scan extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      scanning: false,\n      results: []\n    };\n\n    this._scan = () => {\n      this.setState({\n        scanning: !this.state.scanning\n      });\n    };\n\n    this._onDetected = result => {\n      this.setState({\n        results: this.state.results.concat([result])\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this._scan,\n        children: this.state.scanning ? 'Stop' : 'Start'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"results\",\n        children: this.state.results.map((result, i) => /*#__PURE__*/_jsxDEV(Result, {\n          result: result\n        }, result.codeResult.code + i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), this.state.scanning ? /*#__PURE__*/_jsxDEV(Scanner, {\n        onDetected: this._onDetected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 34\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Scan;","map":{"version":3,"sources":["C:/Users/tt/Desktop/FeedItForward/feeditforwardapp/client/src/Scan.js"],"names":["React","Component","ReactDOM","Scanner","Result","Scan","state","scanning","results","_scan","setState","_onDetected","result","concat","render","map","i","codeResult","code"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,MAAMC,IAAN,SAAmBJ,SAAnB,CAA6B;AAAA;AAAA;AAAA,SACzBK,KADyB,GACjB;AACNC,MAAAA,QAAQ,EAAE,KADJ;AAENC,MAAAA,OAAO,EAAE;AAFH,KADiB;;AAAA,SAMzBC,KANyB,GAMjB,MAAM;AACZ,WAAKC,QAAL,CAAc;AAAEH,QAAAA,QAAQ,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAAxB,OAAd;AACD,KARwB;;AAAA,SAUzBI,WAVyB,GAUXC,MAAM,IAAI;AACtB,WAAKF,QAAL,CAAc;AAAEF,QAAAA,OAAO,EAAE,KAAKF,KAAL,CAAWE,OAAX,CAAmBK,MAAnB,CAA0B,CAACD,MAAD,CAA1B;AAAX,OAAd;AACD,KAZwB;AAAA;;AAczBE,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAE,KAAKL,KAAtB;AAAA,kBACG,KAAKH,KAAL,CAAWC,QAAX,GAAsB,MAAtB,GAA+B;AADlC;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAI,QAAA,SAAS,EAAC,SAAd;AAAA,kBACG,KAAKD,KAAL,CAAWE,OAAX,CAAmBO,GAAnB,CAAuB,CAACH,MAAD,EAASI,CAAT,kBACtB,QAAC,MAAD;AAAyC,UAAA,MAAM,EAAEJ;AAAjD,WAAaA,MAAM,CAACK,UAAP,CAAkBC,IAAlB,GAAyBF,CAAtC;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAJF,EASG,KAAKV,KAAL,CAAWC,QAAX,gBAAsB,QAAC,OAAD;AAAS,QAAA,UAAU,EAAE,KAAKI;AAA1B;AAAA;AAAA;AAAA;AAAA,cAAtB,GAAkE,IATrE;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AA5BwB;;AA+B7B,eAAeN,IAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport Scanner from './Scanner'\r\nimport Result from './Result'\r\n\r\nclass Scan extends Component {\r\n    state = {\r\n      scanning: false,\r\n      results: [],\r\n    }\r\n  \r\n    _scan = () => {\r\n      this.setState({ scanning: !this.state.scanning })\r\n    }\r\n  \r\n    _onDetected = result => {\r\n      this.setState({ results: this.state.results.concat([result]) })\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div>\r\n          <button onClick={this._scan}>\r\n            {this.state.scanning ? 'Stop' : 'Start'}\r\n          </button>\r\n          <ul className=\"results\">\r\n            {this.state.results.map((result, i) => (\r\n              <Result key={result.codeResult.code + i} result={result} />\r\n            ))}\r\n          </ul>\r\n          {this.state.scanning ? <Scanner onDetected={this._onDetected} /> : null}\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\nexport default Scan;"]},"metadata":{},"sourceType":"module"}