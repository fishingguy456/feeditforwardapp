{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tt\\\\Desktop\\\\FeedItForward\\\\feeditforwardapp\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport Inventory from \"./Inventory.js\";\nimport Scan from \"./Scan.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [screen, setScreen] = useState(\"scan\");\n  /*\r\n  let childRef = React.createRef();\r\n    \r\n  if ((childRef.current.results).length == 1) {\r\n    console.log(childRef.current.results[(childRef.current.results).length-1]);\r\n    cur_screen = <Inventory result={childRef.current.results[(childRef.current.results).length-1]} />\r\n  }\r\n  */\n\n  const eventhandler = data => console.log(data.results.length);\n  /* data.results[0][\"codeResult\"][\"code\"] to access the actual code */\n\n\n  let cur_screen;\n\n  if (eventhandler.results.length == 1) {\n    cur_screen = /*#__PURE__*/_jsxDEV(Inventory, {\n      result: eventhandler.results[0][\"codeResult\"][\"code\"]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 18\n    }, this);\n  } else if (screen === \"scan\") {\n    cur_screen = /*#__PURE__*/_jsxDEV(Scan, {\n      onChange: eventhandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 18\n    }, this);\n  } else {\n    cur_screen = /*#__PURE__*/_jsxDEV(Inventory, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 18\n    }, this);\n  }\n\n  const changeScreen = () => {\n    if (screen === \"scan\") {\n      cur_screen = /*#__PURE__*/_jsxDEV(Inventory, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 20\n      }, this);\n      setScreen(\"inventory\");\n    } else {\n      cur_screen = /*#__PURE__*/_jsxDEV(Scan, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 20\n      }, this);\n      setScreen(\"scan\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: changeScreen,\n      children: \"Switch Scan\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), cur_screen]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"vTaJgin7bP4ewMls55/47sD9XWQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/tt/Desktop/FeedItForward/feeditforwardapp/client/src/App.js"],"names":["React","useState","useEffect","Inventory","Scan","App","screen","setScreen","eventhandler","data","console","log","results","length","cur_screen","changeScreen"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AAEA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,MAAD,CAApC;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AAGE,QAAMO,YAAY,GAAGC,IAAI,IAAGC,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,OAAL,CAAaC,MAAzB,CAA5B;AACA;;;AACA,MAAIC,UAAJ;;AACA,MAAIN,YAAY,CAACI,OAAb,CAAqBC,MAArB,IAA+B,CAAnC,EAAsC;AACpCC,IAAAA,UAAU,gBAAG,QAAC,SAAD;AAAW,MAAA,MAAM,EAAEN,YAAY,CAACI,OAAb,CAAqB,CAArB,EAAwB,YAAxB,EAAsC,MAAtC;AAAnB;AAAA;AAAA;AAAA;AAAA,YAAb;AACD,GAFD,MAGK,IAAIN,MAAM,KAAK,MAAf,EAAuB;AAC1BQ,IAAAA,UAAU,gBAAG,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAEN;AAAhB;AAAA;AAAA;AAAA;AAAA,YAAb;AACD,GAFI,MAGA;AACHM,IAAAA,UAAU,gBAAG,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAAb;AACD;;AAED,QAAMC,YAAY,GAAG,MAAM;AACzB,QAAIT,MAAM,KAAK,MAAf,EAAuB;AACrBQ,MAAAA,UAAU,gBAAG,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cAAb;AACAP,MAAAA,SAAS,CAAC,WAAD,CAAT;AACD,KAHD,MAIK;AACHO,MAAAA,UAAU,gBAAG,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cAAb;AACAP,MAAAA,SAAS,CAAC,MAAD,CAAT;AACD;AACF,GATD;;AAWA,sBACE;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAEQ,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGD,UAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GA3CQT,G;;KAAAA,G;AA6CT,eAAeA,GAAf","sourcesContent":["import \"./App.css\";\r\nimport React, {useState, useEffect} from \"react\";\r\n\r\nimport Inventory from \"./Inventory.js\";\r\nimport Scan from \"./Scan.js\";\r\n\r\nfunction App() {\r\n\r\n  const [screen, setScreen] = useState(\"scan\");\r\n  /*\r\n  let childRef = React.createRef();\r\n\r\n  \r\n  if ((childRef.current.results).length == 1) {\r\n    console.log(childRef.current.results[(childRef.current.results).length-1]);\r\n    cur_screen = <Inventory result={childRef.current.results[(childRef.current.results).length-1]} />\r\n  }\r\n  */\r\n\r\n  const eventhandler = data =>console.log(data.results.length);\r\n  /* data.results[0][\"codeResult\"][\"code\"] to access the actual code */\r\n  let cur_screen;\r\n  if (eventhandler.results.length == 1) {\r\n    cur_screen = <Inventory result={eventhandler.results[0][\"codeResult\"][\"code\"]} />;\r\n  }\r\n  else if (screen === \"scan\") {\r\n    cur_screen = <Scan onChange={eventhandler} />;\r\n  }\r\n  else {\r\n    cur_screen = <Inventory />;\r\n  }\r\n\r\n  const changeScreen = () => {\r\n    if (screen === \"scan\") {\r\n      cur_screen = <Inventory />;\r\n      setScreen(\"inventory\");\r\n    }\r\n    else {\r\n      cur_screen = <Scan />;\r\n      setScreen(\"scan\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={changeScreen}>Switch Scan</button>\r\n      {cur_screen}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}