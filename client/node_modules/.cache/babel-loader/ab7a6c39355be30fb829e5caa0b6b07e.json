{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\qukev\\\\OneDrive\\\\Desktop\\\\feeditforwardapp\\\\client\\\\src\\\\Inventory.js\";\nimport \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Inventory extends React.Component {\n  // const [itemName, setItemName] = useState(\"\");\n  // const [quantity, setQuantity] = useState(\"\");\n  // const [itemList, setItemList] = useState([]);\n  // const [newItemName, setNewItemName] = useState(\"\");\n  // const [newQuantity, setNewQuantity] = useState(0);\n  constructor(props) {\n    super(props);\n\n    this.addItem = () => {\n      Axios.post(\"http://localhost:3001/create\", {\n        itemName: itemName,\n        quantity: quantity\n      }).then(() => {\n        Axios.get(\"http://localhost:3001/getLatestId\").then(response => {\n          setItemList(itemList.concat({\n            _id: response.data[0]._id,\n            itemName: itemName,\n            quantity: quantity\n          }));\n          setItemName(\"\");\n          setQuantity(\"\");\n        });\n      });\n      console.log(\"Item added to database\");\n    };\n\n    this.updateItem = id => {\n      Axios.put(\"http://localhost:3001/update\", {\n        _id: id,\n        newItemName: newItemName,\n        newQuantity: newQuantity\n      }).then(() => {\n        setItemList(itemList.map(item => {\n          if (item._id === id) {\n            item.itemName = newItemName;\n            item.quantity = newQuantity;\n          }\n\n          return item;\n        }));\n      });\n      console.log(\"Item updated in database\");\n    };\n\n    this.deleteItem = id => {\n      Axios.delete(`http://localhost:3001/delete/${id}`).then(() => {\n        setItemList(itemList.filter(item => item._id !== id));\n      });\n      console.log(\"Item deleted from database\");\n    };\n\n    this.downloadCSV = () => {\n      const csv = itemList.map(item => {\n        return `${item._id},${item.itemName},${item.quantity}`;\n      });\n      const csvString = \"ID,\\\"Item Name\\\",Quantity\\n\" + csv.join(\"\\n\");\n      const a = document.createElement(\"a\");\n      a.href = \"data:text/csv;charset=utf-8,\" + encodeURI(csvString);\n      a.download = \"inventory.csv\";\n      a.click();\n      console.log(\"CSV Downloaded\");\n    };\n\n    console.log(this.props);\n    this.state = {\n      itemName: \"\",\n      quantity: \"\",\n      itemList: [],\n      newItemName: \"\",\n      newQuantity: 0\n    };\n  } // useEffect(() => {\n  //     Axios.get(\"http://localhost:3001/read\").then((response) => { //promise\n  //         setItemName(props.result);\n  //         setItemList(response.data);\n  //     });\n  // }, [props.result]);\n\n\n  componentDidMount() {\n    Axios.get(\"http://localhost:3001/read\").then(response => {\n      //promise\n      this.setState({\n        itemName: this.props.result,\n        itemList: response.data\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Inventory Management Application\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Add an Item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Item Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"itemName\",\n          value: itemName,\n          onChange: event => {\n            setItemName(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Quantity:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"quantity\",\n          value: quantity,\n          onChange: event => {\n            setQuantity(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addItem,\n          children: \"Add Item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Current Inventory\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Item Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: itemList.map((item, key) => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"listItem\",\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.itemName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.quantity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"Updated Item Name\",\n                  onChange: event => {\n                    setNewItemName(event.target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  placeholder: \"Updated Quantity\",\n                  onChange: event => {\n                    setNewQuantity(event.target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => updateItem(item._id),\n                  children: \"Update\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => deleteItem(item._id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 25\n              }, this)]\n            }, key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => downloadCSV(),\n        children: \"Download to CSV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Inventory;","map":{"version":3,"sources":["C:/Users/qukev/OneDrive/Desktop/feeditforwardapp/client/src/Inventory.js"],"names":["React","useState","useEffect","Axios","Inventory","Component","constructor","props","addItem","post","itemName","quantity","then","get","response","setItemList","itemList","concat","_id","data","setItemName","setQuantity","console","log","updateItem","id","put","newItemName","newQuantity","map","item","deleteItem","delete","filter","downloadCSV","csv","csvString","join","a","document","createElement","href","encodeURI","download","click","state","componentDidMount","setState","result","render","event","target","value","key","setNewItemName","setNewQuantity"],"mappings":"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","sourcesContent":["import \"./App.css\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nclass Inventory extends React.Component {\r\n    // const [itemName, setItemName] = useState(\"\");\r\n    // const [quantity, setQuantity] = useState(\"\");\r\n    // const [itemList, setItemList] = useState([]);\r\n    // const [newItemName, setNewItemName] = useState(\"\");\r\n    // const [newQuantity, setNewQuantity] = useState(0);\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(this.props);\r\n        this.state = {\r\n            itemName: \"\",\r\n            quantity: \"\",\r\n            itemList: [],\r\n            newItemName: \"\",\r\n            newQuantity: 0\r\n        };\r\n    }\r\n    // useEffect(() => {\r\n    //     Axios.get(\"http://localhost:3001/read\").then((response) => { //promise\r\n    //         setItemName(props.result);\r\n    //         setItemList(response.data);\r\n    //     });\r\n    // }, [props.result]);\r\n\r\n    componentDidMount() {\r\n        Axios.get(\"http://localhost:3001/read\").then((response) => { //promise\r\n            this.setState({\r\n                itemName: this.props.result,\r\n                itemList: response.data\r\n            });\r\n        });\r\n    }\r\n\r\n    addItem = () => {\r\n        Axios.post(\"http://localhost:3001/create\", {itemName: itemName, quantity: quantity,}).then(() => {\r\n        Axios.get(\"http://localhost:3001/getLatestId\").then((response) => {\r\n            setItemList(itemList.concat({_id: response.data[0]._id, itemName: itemName, quantity: quantity}));\r\n            setItemName(\"\");\r\n            setQuantity(\"\");\r\n        });\r\n        });\r\n        console.log(\"Item added to database\");\r\n    };\r\n    updateItem = (id) => {\r\n        Axios.put(\"http://localhost:3001/update\", {_id: id, newItemName: newItemName, newQuantity: newQuantity,}).then(() => {\r\n        setItemList(itemList.map((item) => {\r\n            if (item._id === id) {\r\n            item.itemName = newItemName;\r\n            item.quantity = newQuantity;\r\n            }\r\n            return item;\r\n        }));\r\n        });\r\n        console.log(\"Item updated in database\");\r\n    };\r\n    deleteItem = (id) => {\r\n        Axios.delete(`http://localhost:3001/delete/${id}`).then(() => {\r\n        setItemList(itemList.filter((item) => item._id !== id));\r\n        });\r\n        console.log(\"Item deleted from database\");\r\n    };\r\n    downloadCSV = () => {\r\n        const csv = itemList.map((item) => {\r\n        return `${item._id},${item.itemName},${item.quantity}`;\r\n        });\r\n        const csvString = \"ID,\\\"Item Name\\\",Quantity\\n\" + csv.join(\"\\n\");\r\n        const a = document.createElement(\"a\");\r\n        a.href = \"data:text/csv;charset=utf-8,\" + encodeURI(csvString);\r\n        a.download = \"inventory.csv\";\r\n        a.click();\r\n        console.log(\"CSV Downloaded\");\r\n    };\r\n    render() {\r\n    return (\r\n        <div className=\"App\">\r\n        <h1>Inventory Management Application</h1>\r\n    \r\n        <div className=\"form\">\r\n            <h1>Add an Item</h1>\r\n            <label>Item Name:</label>\r\n            <input type=\"text\" name=\"itemName\" value={itemName} onChange={(event) => {\r\n            setItemName(event.target.value);\r\n            }}/>\r\n            <label>Quantity:</label>\r\n            <input type=\"number\" name=\"quantity\" value={quantity} onChange={(event) => {\r\n            setQuantity(event.target.value);\r\n            }}/>\r\n            <button onClick={addItem}>Add Item</button>\r\n    \r\n        </div>\r\n            <h1>Current Inventory</h1>\r\n            <table>\r\n            <thead>\r\n                <tr>\r\n                <th>Item Name</th>\r\n                <th>Quantity</th>\r\n                <th>Edit</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {\r\n                itemList.map((item, key) => {\r\n                    return (\r\n                    <tr key={key} className=\"listItem\">\r\n                        <td>{item.itemName}</td>\r\n                        <td>{item.quantity}</td>\r\n                        <td>\r\n                        <input type=\"text\" placeholder=\"Updated Item Name\" onChange={(event) => {\r\n                            setNewItemName(event.target.value);\r\n                        }}/>\r\n                        <input type=\"number\" placeholder=\"Updated Quantity\" onChange={(event) => {\r\n                            setNewQuantity(event.target.value);\r\n                        }}/>\r\n                        <button onClick={() => updateItem(item._id)}>Update</button>\r\n                        <button onClick={() => deleteItem(item._id)}>Delete</button>\r\n                        </td>\r\n                    </tr>\r\n                    );\r\n                })\r\n                }\r\n            </tbody>\r\n            </table>\r\n            <button onClick={() => downloadCSV()}>Download to CSV</button>\r\n        </div>  \r\n    );\r\n            }\r\n}\r\n\r\nexport default Inventory;"]},"metadata":{},"sourceType":"module"}