{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\qukev\\\\OneDrive\\\\Desktop\\\\feeditforwardapp\\\\client\\\\src\\\\Inventory.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Inventory(props) {\n  _s();\n\n  const [itemName, setItemName] = useState(\"\");\n  const [quantity, setQuantity] = useState(\"\");\n  const [itemList, setItemList] = useState([]);\n  const [newItemName, setNewItemName] = useState(\"\");\n  const [newQuantity, setNewQuantity] = useState(0);\n  useEffect(() => {\n    Axios.get(\"http://localhost:3001/read\").then(response => {\n      //promise\n      console.log(props);\n      setItemName(props.result);\n      setItemList(response.data);\n    });\n  }, [props.result]);\n\n  const addItem = () => {\n    Axios.post(\"http://localhost:3001/create\", {\n      itemName: itemName,\n      quantity: quantity\n    }).then(() => {\n      Axios.get(\"http://localhost:3001/getLatestId\").then(response => {\n        setItemList(itemList.concat({\n          _id: response.data[0]._id,\n          itemName: itemName,\n          quantity: quantity\n        }));\n        setItemName(\"\");\n        setQuantity(\"\");\n      });\n    });\n    console.log(\"Item added to database\");\n  };\n\n  const updateItem = id => {\n    Axios.put(\"http://localhost:3001/update\", {\n      _id: id,\n      newItemName: newItemName,\n      newQuantity: newQuantity\n    }).then(() => {\n      setItemList(itemList.map(item => {\n        if (item._id === id) {\n          item.itemName = newItemName;\n          item.quantity = newQuantity;\n        }\n\n        return item;\n      }));\n    });\n    console.log(\"Item updated in database\");\n  };\n\n  const deleteItem = id => {\n    Axios.delete(`http://localhost:3001/delete/${id}`).then(() => {\n      setItemList(itemList.filter(item => item._id !== id));\n    });\n    console.log(\"Item deleted from database\");\n  };\n\n  const downloadCSV = () => {\n    const csv = itemList.map(item => {\n      return `${item._id},${item.itemName},${item.quantity}`;\n    });\n    const csvString = \"ID,\\\"Item Name\\\",Quantity\\n\" + csv.join(\"\\n\");\n    const a = document.createElement(\"a\");\n    a.href = \"data:text/csv;charset=utf-8,\" + encodeURI(csvString);\n    a.download = \"inventory.csv\";\n    a.click();\n    console.log(\"CSV Downloaded\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Inventory Management Application\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Add an Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Item Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"itemName\",\n        value: itemName,\n        onChange: event => {\n          setItemName(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Quantity:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"quantity\",\n        value: quantity,\n        onChange: event => {\n          setQuantity(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addItem,\n        children: \"Add Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Current Inventory\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Item Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: itemList.map((item, key) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"listItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.itemName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.quantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Updated Item Name\",\n                onChange: event => {\n                  setNewItemName(event.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                placeholder: \"Updated Quantity\",\n                onChange: event => {\n                  setNewQuantity(event.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => updateItem(item._id),\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => deleteItem(item._id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 25\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 21\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => downloadCSV(),\n      children: \"Download to CSV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Inventory, \"WcRwAxOBlDpkYKANW29zBoFC0n8=\");\n\n_c = Inventory;\nexport default Inventory;\n\nvar _c;\n\n$RefreshReg$(_c, \"Inventory\");","map":{"version":3,"sources":["C:/Users/qukev/OneDrive/Desktop/feeditforwardapp/client/src/Inventory.js"],"names":["React","useState","useEffect","Axios","Inventory","props","itemName","setItemName","quantity","setQuantity","itemList","setItemList","newItemName","setNewItemName","newQuantity","setNewQuantity","get","then","response","console","log","result","data","addItem","post","concat","_id","updateItem","id","put","map","item","deleteItem","delete","filter","downloadCSV","csv","csvString","join","a","document","createElement","href","encodeURI","download","click","event","target","value","key"],"mappings":"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","sourcesContent":["import \"./App.css\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nfunction Inventory(props) {\r\n    const [itemName, setItemName] = useState(\"\");\r\n    const [quantity, setQuantity] = useState(\"\");\r\n    const [itemList, setItemList] = useState([]);\r\n    const [newItemName, setNewItemName] = useState(\"\");\r\n    const [newQuantity, setNewQuantity] = useState(0);\r\n    \r\n    useEffect(() => {\r\n        Axios.get(\"http://localhost:3001/read\").then((response) => { //promise\r\n        console.log(props);\r\n        setItemName(props.result);\r\n        setItemList(response.data);\r\n        });\r\n    }, [props.result]);\r\n    const addItem = () => {\r\n        Axios.post(\"http://localhost:3001/create\", {itemName: itemName, quantity: quantity,}).then(() => {\r\n        Axios.get(\"http://localhost:3001/getLatestId\").then((response) => {\r\n            setItemList(itemList.concat({_id: response.data[0]._id, itemName: itemName, quantity: quantity}));\r\n            setItemName(\"\");\r\n            setQuantity(\"\");\r\n        });\r\n        });\r\n        console.log(\"Item added to database\");\r\n    };\r\n    const updateItem = (id) => {\r\n        Axios.put(\"http://localhost:3001/update\", {_id: id, newItemName: newItemName, newQuantity: newQuantity,}).then(() => {\r\n        setItemList(itemList.map((item) => {\r\n            if (item._id === id) {\r\n            item.itemName = newItemName;\r\n            item.quantity = newQuantity;\r\n            }\r\n            return item;\r\n        }));\r\n        });\r\n        console.log(\"Item updated in database\");\r\n    };\r\n    const deleteItem = (id) => {\r\n        Axios.delete(`http://localhost:3001/delete/${id}`).then(() => {\r\n        setItemList(itemList.filter((item) => item._id !== id));\r\n        });\r\n        console.log(\"Item deleted from database\");\r\n    };\r\n    const downloadCSV = () => {\r\n        const csv = itemList.map((item) => {\r\n        return `${item._id},${item.itemName},${item.quantity}`;\r\n        });\r\n        const csvString = \"ID,\\\"Item Name\\\",Quantity\\n\" + csv.join(\"\\n\");\r\n        const a = document.createElement(\"a\");\r\n        a.href = \"data:text/csv;charset=utf-8,\" + encodeURI(csvString);\r\n        a.download = \"inventory.csv\";\r\n        a.click();\r\n        console.log(\"CSV Downloaded\");\r\n    };\r\n    return (\r\n        <div className=\"App\">\r\n        <h1>Inventory Management Application</h1>\r\n    \r\n        <div className=\"form\">\r\n            <h1>Add an Item</h1>\r\n            <label>Item Name:</label>\r\n            <input type=\"text\" name=\"itemName\" value={itemName} onChange={(event) => {\r\n            setItemName(event.target.value);\r\n            }}/>\r\n            <label>Quantity:</label>\r\n            <input type=\"number\" name=\"quantity\" value={quantity} onChange={(event) => {\r\n            setQuantity(event.target.value);\r\n            }}/>\r\n            <button onClick={addItem}>Add Item</button>\r\n    \r\n        </div>\r\n            <h1>Current Inventory</h1>\r\n            <table>\r\n            <thead>\r\n                <tr>\r\n                <th>Item Name</th>\r\n                <th>Quantity</th>\r\n                <th>Edit</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {\r\n                itemList.map((item, key) => {\r\n                    return (\r\n                    <tr key={key} className=\"listItem\">\r\n                        <td>{item.itemName}</td>\r\n                        <td>{item.quantity}</td>\r\n                        <td>\r\n                        <input type=\"text\" placeholder=\"Updated Item Name\" onChange={(event) => {\r\n                            setNewItemName(event.target.value);\r\n                        }}/>\r\n                        <input type=\"number\" placeholder=\"Updated Quantity\" onChange={(event) => {\r\n                            setNewQuantity(event.target.value);\r\n                        }}/>\r\n                        <button onClick={() => updateItem(item._id)}>Update</button>\r\n                        <button onClick={() => deleteItem(item._id)}>Delete</button>\r\n                        </td>\r\n                    </tr>\r\n                    );\r\n                })\r\n                }\r\n            </tbody>\r\n            </table>\r\n            <button onClick={() => downloadCSV()}>Download to CSV</button>\r\n        </div>  \r\n    );\r\n}\r\n\r\nexport default Inventory;"]},"metadata":{},"sourceType":"module"}